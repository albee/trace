<launch>
  <?comment launch-prefix="gdb -ex run --args" ?>
  <?comment launch-prefix="valgrind --leak-check=full" ?>

  <arg name="robot" default="$(optenv ASTROBEE_ROBOT sim)" />
  <arg name="world" default="$(optenv ASTROBEE_WORLD iss)" />

  <env name="ASTROBEE_ROBOT" value="$(arg robot)" />
  <env name="ASTROBEE_WORLD" value="$(arg world)" />
  <!-- <env if="$(eval optenv('ASTROBEE_CONFIG_DIR','')=='')"
       name="ASTROBEE_CONFIG_DIR" value="$(find astrobee)/config" />
  <env if="$(eval optenv('ASTROBEE_RESOURCE_DIR','')=='')"
       name="ASTROBEE_RESOURCE_DIR" value="$(find astrobee)/resources" />
  <env if="$(eval optenv('ROSCONSOLE_CONFIG_FILE','')=='')"
       name="ROSCONSOLE_CONFIG_FILE" value="$(find astrobee)/resources/logging.config"/> -->

  <arg name="spurn" default=""/>                 <!-- Prevent a specific node   -->
  <arg name="nodes" default=""/>                 <!-- Launch specific nodes     -->
  <arg name="extra" default=""/>                 <!-- Inject an additional node -->
  <arg name="debug" default=""/>                 <!-- Debug a node set          -->
  <arg name="dds" default="false"/>              <!-- Should DDS be started     -->
  <arg name="output" default="screen"/>          <!-- Where nodes should log    -->

  <rosparam command="load" file="$(find execute_asap)/config/chaser-coordinator-config/chaser_coord_params.yaml"/>
  <rosparam command="load" file="$(find execute_asap)/config/uc-bound-config/uc_bound_params.yaml"/>

  <!-- Start a nodelet manager, if needed -->
  <node
        pkg="nodelet" type="nodelet" name="chaser_coordinator_manager"
        args="manager"
        output="$(arg output)"/>

  <!-- Now inject the nodelet into the nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="chaser_coordinator"
        required="false" respawn="false"
        args="load chaser_coordinator/ChaserCoordinatorNodelet chaser_coordinator_manager"
        output="$(arg output)"/>

  <param name="td/instruct" type="string" value="no_action" />
</launch>
